=============training from sratch============
Program ID: 32454

Program command: 
 ['TrainSegV3d_ROI.py', '/home/hxie1/temp_netParameters/OvarianCancer/SegV3d_ROI', '1', '/home/hxie1/data/OvarianCancerCT/primaryROI1_1_3/nrrd_npy', '/home/hxie1/data/OvarianCancerCT/primaryROI1_1_3/labels_npy', '1', '2', '0']

Major program changes: 
      1  3D V model for primary cancer ROI;
      2  Uniform ROI size: 51*171*171 in z,y,x directon;
      3  Total 36 patient data, in which training data 24 patients, validation 6 patients, and test 6 patients;
      4  all 36 patients data have 50-80% 3D label;
      5  Dice coefficient is 3D dice coefficient against corresponding 3D ground truth;
      6  training data augmentation in the fly: affine in XY plane, translation in Z direction;
      7  In the bottle neck of V model, the latent vector has size of 512*2*9*9;
      Sep 16th, 2019:
      1   add dynamic loss weight according trainin  data;
      2   refine learning rate decay.
      Sep 21st, 2019
      1   add improved Boundary Loss2, and inherit the previous learningrate of network of pure CELoss;
      Sep 23rd, 2019:
      1   improve mean of boundary loss limited on the A,B regions;
      2   use log(segProb) instead of segProb in the boudary loss;
      3   CrossEntropy weight reduces 0.01 per 5 epochs from 1 to 0.01, while boundary Loss weight increase 0.01 per 5 epochs from 0.01 to 1. 
      Sep 24th, 2019
      1   Use boundaryLoss1, which is considering the whole volume. 
      Sep 25th, 2019
      1   use boundaryLoss3, which is a stronger gradient signal to improve loss.
      2   unbalanced weight for class is applied on logP,and just use boundaryLoss3 with CELoss.
      3   use CELoss and boundaryLoss together.
      4   Use truncated DistanceCrossEntropy Loss alone;
      5   change LRScheduler into reduce into Plateau with initial LR=0.1
      Sep 26th, 2019
      1   Add one layer in the bottom of V model;
      2   Add residual connnection in each layer;
      Sep 30th, 2019
      1   With size-reduced ROI of size 51*149*149;
      2   reduce the translation of data augmentation;
      3   reduce all data into 35 patients, excluding a very blur patient.
      Oct 5th, 2019
      1   use uniform physical size 147mm*147mm*147mm, input pixel size: 49*147*147 with spacing size 3mm*1mm*1mm;
      2   change V model with inputsize 49*147*147
      Oct 6th, 2019
      1   add filter number to 48 at the first layer. 
      Oct 7th, 2019
      1   restore to 32 of number of filters in the first layer;
      2   add bottom number of filters to 1024, and keep down sample and add filter number together. 
      Oct 8th, 2019
      1   discard the cancer with size exceeding 147mm*147mm*147mm; Now remains 29 patients data; 
      Oct 9th, 2019
      1   In the first layer of V model, remove the residual link; 
           with the residula link at first layer: Tr dice:54%, Validation Dice 27%, Test Dice 56%;  Not good.
      2   the final output layer, change into 1*1*1 convolution, instead of 3*3*3 convolution;
      3   add labelConsistencyLoss, it use 64 dimension feature extracted from 2 ends of V model:
           It gets stable Training Dice 61%, validation Dice 27%, and test dice 49%, for fold 0 in the fixed physical size:147mm*147mm*147mm; 
      Oct 11th, 2019
      1   use feature tensor just from the output end of V model. It is 32 dimensions.
          It gets stable Training Dice 61%, validation Dice 23%, and test dice 49%, for fold 0 in the fixed physical size:147mm*147mm*147mm; 
      2   windows size for consistency loss changes to 3;
      Oct 12th, 2019
      1   change image window level to 100/50; relaunch training;
      2   change consistencyLoss to use ground truth for comparing diff of feature vector;
      Oct 13th, 2019
      1    use conistencyLoss3: ((G1-G2)-(P1-P2))**2 as loss.
      
      Oct 18th, 2019
      1   use 48 filters at the first layer with inputsize 49*147*147 with scaled ROI.
      
      Oct 20th, 2019
      1   at final output layer of V model, change 1*1*1 conv to 5*5*5 conv, in order to consider context for final output
      
      Oct 23th, 2019
      1   change to MaxPool with 2*2*2 with stride 2;
      2   Loss use GeneralizedDiceLoss function;
        
      
       
      

          
         

Discarded changes:                  
          

Program starting Time: 2019-10-23 16:01:31.372528
Info: netPath = /home/hxie1/temp_netParameters/OvarianCancer/SegV3d_ROI/20191023_160131

Info: this is the 1th fold leave for test in the 6-fold cross-validation.

Info: batchSize = 1

Info: useConsistencyLoss = False and searchWindowSize= 0

Net parameters is saved in  /home/hxie1/temp_netParameters/OvarianCancer/SegV3d_ROI/20191023_160131.
6-fold cross validation: the 1th fold is for test, the 2th fold is for validation, remaining folds are for training.

training dataset: total 23 image files.

validation dataset: total 6 image files.

test dataset: total 6 image files.
Total 23 training files  extracted from /home/hxie1/data/OvarianCancerCT/primaryROI1_1_3/labels_npy
0 has 21725336 elements, with a rate of  0.8920884496227068 
1 has 2628007 elements, with a rate of  0.10791155037729316 
loss weight = tensor([1.0000, 8.2668])
Network has total 254,652,146 parameters.


************** Table of Training Log **************
Epoch	LearningRate		TrainingLoss	Dice		ValidationLoss	Dice		TestLoss	Dice
0	1.0000e-02		0.6981		0.27855		0.8968		0.10482		0.7775		0.23564
5	1.0000e-02		0.5355		0.41354		0.6819		0.25795		0.4199		0.54859
10	1.0000e-02		0.4905		0.45668		0.5196		0.46814		0.4101		0.54890
15	1.0000e-02		0.4813		0.48602		0.5471		0.41996		0.4070		0.53312
20	1.0000e-02		0.4603		0.50360		0.5380		0.40642		0.4322		0.47301
25	1.0000e-02		0.4432		0.51804		0.6432		0.30235		0.4782		0.42465
30	1.0000e-02		0.4512		0.50199		0.5418		0.40429		0.4802		0.41109
35	1.0000e-02		0.4502		0.50289		0.5501		0.40931		0.4470		0.47148
40	1.0000e-02		0.4368		0.51690		0.4300		0.55130		0.3401		0.61780
45	1.0000e-02		0.4497		0.51467		0.6148		0.35228		0.5069		0.40141
50	1.0000e-02		0.4048		0.56781		0.7043		0.21561		0.4442		0.44152
55	1.0000e-02		0.4212		0.54169		0.5254		0.44554		0.4367		0.48812
60	1.0000e-02		0.4064		0.55414		0.3787		0.60899		0.4088		0.55097
65	1.0000e-02		0.3780		0.58470		0.4820		0.47091		0.3977		0.52719
70	1.0000e-02		0.3754		0.59179		0.3769		0.61056		0.3514		0.61415
75	1.0000e-02		0.4125		0.56123		0.5269		0.41660		0.3953		0.53620
80	1.0000e-02		0.3862		0.58772		0.5330		0.45614		0.4372		0.50436
85	1.0000e-02		0.4015		0.56678		0.4464		0.53655		0.3310		0.64635
