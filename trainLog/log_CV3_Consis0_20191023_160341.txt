=============training from sratch============
Program ID: 539

Program command: 
 ['TrainSegV3d_ROI.py', '/home/hxie1/temp_netParameters/OvarianCancer/SegV3d_ROI', '1', '/home/hxie1/data/OvarianCancerCT/primaryROI1_1_3/nrrd_npy', '/home/hxie1/data/OvarianCancerCT/primaryROI1_1_3/labels_npy', '3', '0', '0']

Major program changes: 
      1  3D V model for primary cancer ROI;
      2  Uniform ROI size: 51*171*171 in z,y,x directon;
      3  Total 36 patient data, in which training data 24 patients, validation 6 patients, and test 6 patients;
      4  all 36 patients data have 50-80% 3D label;
      5  Dice coefficient is 3D dice coefficient against corresponding 3D ground truth;
      6  training data augmentation in the fly: affine in XY plane, translation in Z direction;
      7  In the bottle neck of V model, the latent vector has size of 512*2*9*9;
      Sep 16th, 2019:
      1   add dynamic loss weight according trainin  data;
      2   refine learning rate decay.
      Sep 21st, 2019
      1   add improved Boundary Loss2, and inherit the previous learningrate of network of pure CELoss;
      Sep 23rd, 2019:
      1   improve mean of boundary loss limited on the A,B regions;
      2   use log(segProb) instead of segProb in the boudary loss;
      3   CrossEntropy weight reduces 0.01 per 5 epochs from 1 to 0.01, while boundary Loss weight increase 0.01 per 5 epochs from 0.01 to 1. 
      Sep 24th, 2019
      1   Use boundaryLoss1, which is considering the whole volume. 
      Sep 25th, 2019
      1   use boundaryLoss3, which is a stronger gradient signal to improve loss.
      2   unbalanced weight for class is applied on logP,and just use boundaryLoss3 with CELoss.
      3   use CELoss and boundaryLoss together.
      4   Use truncated DistanceCrossEntropy Loss alone;
      5   change LRScheduler into reduce into Plateau with initial LR=0.1
      Sep 26th, 2019
      1   Add one layer in the bottom of V model;
      2   Add residual connnection in each layer;
      Sep 30th, 2019
      1   With size-reduced ROI of size 51*149*149;
      2   reduce the translation of data augmentation;
      3   reduce all data into 35 patients, excluding a very blur patient.
      Oct 5th, 2019
      1   use uniform physical size 147mm*147mm*147mm, input pixel size: 49*147*147 with spacing size 3mm*1mm*1mm;
      2   change V model with inputsize 49*147*147
      Oct 6th, 2019
      1   add filter number to 48 at the first layer. 
      Oct 7th, 2019
      1   restore to 32 of number of filters in the first layer;
      2   add bottom number of filters to 1024, and keep down sample and add filter number together. 
      Oct 8th, 2019
      1   discard the cancer with size exceeding 147mm*147mm*147mm; Now remains 29 patients data; 
      Oct 9th, 2019
      1   In the first layer of V model, remove the residual link; 
           with the residula link at first layer: Tr dice:54%, Validation Dice 27%, Test Dice 56%;  Not good.
      2   the final output layer, change into 1*1*1 convolution, instead of 3*3*3 convolution;
      3   add labelConsistencyLoss, it use 64 dimension feature extracted from 2 ends of V model:
           It gets stable Training Dice 61%, validation Dice 27%, and test dice 49%, for fold 0 in the fixed physical size:147mm*147mm*147mm; 
      Oct 11th, 2019
      1   use feature tensor just from the output end of V model. It is 32 dimensions.
          It gets stable Training Dice 61%, validation Dice 23%, and test dice 49%, for fold 0 in the fixed physical size:147mm*147mm*147mm; 
      2   windows size for consistency loss changes to 3;
      Oct 12th, 2019
      1   change image window level to 100/50; relaunch training;
      2   change consistencyLoss to use ground truth for comparing diff of feature vector;
      Oct 13th, 2019
      1    use conistencyLoss3: ((G1-G2)-(P1-P2))**2 as loss.
      
      Oct 18th, 2019
      1   use 48 filters at the first layer with inputsize 49*147*147 with scaled ROI.
      
      Oct 20th, 2019
      1   at final output layer of V model, change 1*1*1 conv to 5*5*5 conv, in order to consider context for final output
      
      Oct 23th, 2019
      1   change to MaxPool with 2*2*2 with stride 2;
      2   Loss use GeneralizedDiceLoss function;
        
      
       
      

          
         

Discarded changes:                  
          

Program starting Time: 2019-10-23 16:03:41.772490
Info: netPath = /home/hxie1/temp_netParameters/OvarianCancer/SegV3d_ROI/20191023_160341

Info: this is the 3th fold leave for test in the 6-fold cross-validation.

Info: batchSize = 1

Info: useConsistencyLoss = False and searchWindowSize= 0

Net parameters is saved in  /home/hxie1/temp_netParameters/OvarianCancer/SegV3d_ROI/20191023_160341.
6-fold cross validation: the 3th fold is for test, the 4th fold is for validation, remaining folds are for training.

training dataset: total 23 image files.

validation dataset: total 6 image files.

test dataset: total 6 image files.
Total 23 training files  extracted from /home/hxie1/data/OvarianCancerCT/primaryROI1_1_3/labels_npy
0 has 21738644 elements, with a rate of  0.8926349043743194 
1 has 2614699 elements, with a rate of  0.10736509562568063 
loss weight = tensor([1.0000, 8.3140])
Network has total 254,652,146 parameters.


************** Table of Training Log **************
Epoch	LearningRate		TrainingLoss	Dice		ValidationLoss	Dice		TestLoss	Dice
0	1.0000e-02		0.7306		0.26771		0.8513		0.00000		0.8648		0.00000
5	1.0000e-02		0.5842		0.37237		0.6064		0.38576		0.6452		0.34427
10	1.0000e-02		0.5089		0.45843		0.4798		0.49798		0.5504		0.43386
15	1.0000e-02		0.5396		0.41506		0.5140		0.41419		0.5868		0.37428
20	1.0000e-02		0.4755		0.47413		0.4577		0.51102		0.5555		0.42588
25	1.0000e-02		0.4909		0.46499		0.6002		0.33601		0.6373		0.32203
30	1.0000e-02		0.4445		0.51810		0.6438		0.32207		0.6484		0.34014
35	1.0000e-02		0.3886		0.57424		0.5176		0.41031		0.5135		0.45582
40	1.0000e-02		0.4147		0.55660		0.5101		0.40661		0.5975		0.37814
45	1.0000e-02		0.3644		0.61068		0.5030		0.40802		0.6249		0.32829
50	1.0000e-02		0.4015		0.56678		0.4643		0.47331		0.4983		0.48667
55	1.0000e-02		0.3478		0.61500		0.4200		0.49228		0.5051		0.46540
60	1.0000e-02		0.3566		0.62095		0.6832		0.19323		0.6298		0.24671
65	1.0000e-02		0.3387		0.63656		0.6956		0.18472		0.6711		0.24755
70	1.0000e-02		0.3217		0.65246		0.5040		0.41535		0.5498		0.41276
75	1.0000e-02		0.3339		0.63823		0.4372		0.54632		0.4880		0.49315
80	1.0000e-02		0.3171		0.66371		0.4590		0.44733		0.5612		0.37624
85	1.0000e-02		0.3314		0.64885		0.5091		0.40347		0.5720		0.36624
