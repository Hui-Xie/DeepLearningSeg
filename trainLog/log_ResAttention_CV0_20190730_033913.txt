=============training from sratch============
Program ID: 5029

Program command: 
 ['TrainResAttentionNet.py', '/home/hxie1/temp_netParameters/OvarianCancer/ResNeXtAtten', '/home/hxie1/data/OvarianCancerCT/Extract_ps2_2_5/images_npy', '/home/hxie1/data/OvarianCancerCT/patientResponseDict.json', '0', '0']

Major program changes: 
            ResNeXt-based Attention Net: use 2D network to implement 3D convolution without losing 3D context information. 
            0   the input is a 3D full volume without any cropping; 
            1   Use slices as features channels in convolutions,  and use 1*1 convolution along slices direction to implement z direction convolution followed by 3*3 convolutino inside slice planes;
                It just uses three cascading 2D convolutions (first z, then xy, and z direction again) to implement 3D convolution, like in the paper of ResNeXt below.
                The benefits of this design:
                A   reduce network parameters, hoping to reducing overfitting;
                B   speed up training;
                C   this implemented 3D convolutions are all in full slices space;
            2   use group convolution to implement thick slice convolution to increase the network representation capability;
            3   Use ResNeXt-based module like Paper "Aggregated Residual Transformations for Deep Neural Networks " 
                (Link: http://openaccess.thecvf.com/content_cvpr_2017/html/Xie_Aggregated_Residual_Transformations_CVPR_2017_paper.html);
            4   use rich 2D affine transforms slice by slice and concatenate them to implement 3D data augmentation;
            5   20% data for independent test, remaining 80% data for 4-fold cross validation;
            6   add lossweight to adjust positive samples to 3/7 posweight in BCEWithLogitsLoss;
            
            Update:
            1    reduced network parameters to 3.14 million in July 27th, 2019, 0840am
            2    at 15:00 of July 27th, 2019, reduce network parameter again. Now each stage has 160 filters, with 1.235 million parameters
            3    keep 2) parameter, change all maxpooling into average pooling.
            4    At July 29th 09:37am, 2019, reduce filters to 96 to further reduce parameters, keep avgPool.
            5    at July 29th 11:25am, 2019,  reduce filter number to 48, and redue one stage
            6    at July 29th 12:41, 2019:
                    add GPUID in command line;
                    use SGD optimizer, instead of Adam
                    add numbers of filters along deeper layer with step 12.
                    add saveDir's tims stamp;
            7    at July 29th 15:18, 2019,
                    change learning rate step_size = 5 from 10;
                    before FC, we use conv2d
                    learning rate start at 0.5.
            8    at July 30th 03:00, 2019:
                    add learning rate print;
                    use stride =2;
                    add filter number by 2 times along deeper layers.
                                    
                    
            
            
Discarded changes:                  
                  

Experiment setting:
Input CT data: maximum size 140*251*251 (zyx) of 3D numpy array with spacing size(5*2*2)
Ground truth: response binary label

Predictive Model: 

response Loss Function:  BCELogitLoss

Data:   training data has 169 patients 

Training strategy: 

          

Program starting Time: 2019-07-30 03:39:13.686096
Info: netPath = /home/hxie1/temp_netParameters/OvarianCancer/ResNeXtAtten/20190730_033913

Info: this is the 0th fold leave for test in the 4-fold cross-validation, with 20.0% of data for independent test.

Infor: In all data of 169 files, label 0 has 51 files,
	  and label 1 has 118 files, where positive response rate = 0.6982248520710059 in full data
Infor: the independent test set has 34 files,and Training including validation Set has 135 files which will be divided into 4 folds.
In the independent test set of 34 files, 0 has 10, 1 has 24, the rate of 1s is 0.7058823529411765
In this test_0 dataset, total 34 files, where 1 has 24 with rate of 0.7058823529411765
In this train_0 dataset, total 100 files, where 1 has 70 with rate of 0.7
In this validation_0 dataset, total 35 files, where 1 has 24 with rate of 0.6857142857142857
=== Network trains from scratch ====
Network has total 90,380,916 parameters.
Loss Functions List: BCEWithLogitsLoss with weight of 1; 

Hints: Optimal_Result = Yes = 1,  Optimal_Result = No = 0 

Epoch	LearningRate		TrLoss	Accura	TPR_r	TNR_r		VaLoss	Accura	TPR_r	TNR_r		TeLoss	Accura	TPR_r	TNR_r
0	1.0000e-02		2.6524	0.4800	0.5000	0.4333		0.4764	0.3143	0.0000	1.0000		0.4803	0.2941	0.0000	1.0000
5	9.5000e-03		2.1334	0.4600	0.4571	0.4667		1390.7920	0.6857	1.0000	0.0000		1421.7637	0.7059	1.0000	0.0000
10	9.0250e-03		1.0754	0.5200	0.6143	0.3000		3.9771	0.3143	0.0000	1.0000		1.6121	0.2941	0.0000	1.0000
15	8.5737e-03		1.3084	0.4400	0.4000	0.5333		0.5204	0.3429	0.0417	1.0000		0.4120	0.2941	0.0000	1.0000
20	8.1451e-03		0.5207	0.3700	0.1714	0.8333		14.1429	0.6857	1.0000	0.0000		6.5802	0.6176	0.8750	0.0000
25	7.7378e-03		1.6256	0.5700	0.5286	0.6667		1.1621	0.6857	0.9583	0.0909		1.0172	0.7059	1.0000	0.0000
30	7.3509e-03		1.0712	0.4500	0.4143	0.5333		0.5574	0.3143	0.0000	1.0000		0.4995	0.3235	0.0417	1.0000
35	6.9834e-03		0.7022	0.7100	0.9571	0.1333		0.9125	0.3429	0.1667	0.7273		0.8765	0.3235	0.1667	0.7000
40	6.6342e-03		0.4702	0.6300	0.7857	0.2667		0.5604	0.5714	0.7917	0.0909		0.7147	0.6471	0.7500	0.4000
45	6.3025e-03		0.4916	0.3400	0.1143	0.8667		0.5731	0.3143	0.0000	1.0000		0.5368	0.2941	0.0000	1.0000
50	5.9874e-03		0.4254	0.7000	0.9571	0.1000		0.4037	0.6286	0.9167	0.0000		0.4271	0.7059	0.9583	0.1000
55	5.6880e-03		0.4052	0.7000	0.9571	0.1000		0.3978	0.6571	0.9167	0.0909		0.3962	0.6176	0.7917	0.2000
60	5.4036e-03		0.4412	0.3500	0.1429	0.8333		0.4301	0.4286	0.5417	0.1818		0.4398	0.5294	0.5833	0.4000
65	5.1334e-03		0.3895	0.6500	0.8143	0.2667		0.4168	0.5714	0.7500	0.1818		0.4053	0.6176	0.7083	0.4000
