Program ID: 19208

Program command: 
 ['TrainResAttentionNet.py', '/home/hxie1/temp_netParameters/OvarianCancer/ResNeXtAtten', '/home/hxie1/data/OvarianCancerCT/Extract_ps2_2_5/images_npy', '/home/hxie1/data/OvarianCancerCT/patientResponseDict.json', '0']

Major program changes: 
            ResNeXt-based Attention Net: use 2D network to implement 3D convolution without losing 3D context information. 
            0   the input is a 3D full volume without any cropping; 
            1   Use slices as features channels in convolutions,  and use 1*1 convolution along slices direction to implement z direction convolution followed by 3*3 convolutino inside slice planes;
                It just uses three cascading 2D convolutions (first z, then xy, and z direction again) to implement 3D convolution, like in the paper of ResNeXt below.
                The benefits of this design:
                A   reduce network parameters, hoping to reducing overfitting;
                B   speed up training;
                C   this implemented 3D convolutions are all in full slices space;
            2   use group convolution to implement thick slice convolution to increase the network representation capability;
            3   Use ResNeXt-based module like Paper "Aggregated Residual Transformations for Deep Neural Networks " 
                (Link: http://openaccess.thecvf.com/content_cvpr_2017/html/Xie_Aggregated_Residual_Transformations_CVPR_2017_paper.html);
            4   use rich 2D affine transforms slice by slice and concatenate them to implement 3D data augmentation;
            5   20% data for independent test, remaining 80% data for 4-fold cross validation;
            6   add lossweight to adjust positive samples to 3/7 posweight in BCEWithLogitsLoss;
            
            Update:
            1    reduced network parameters to 3.14 million in July 27th, 2019, 0840am
            2    at 15:00 of July 27th, 2019, reduce network parameter again. Now each stage has 160 filters, with 1.235 million parameters
            3    keep 2) parameter, change all maxpooling into average pooling.
            4    At July 29th 09:37am, 2019, reduce filters to 96 to further reduce parameters, keep avgPool.
            
            
            
Discarded changes:                  
                  

Experiment setting:
Input CT data: maximum size 140*251*251 (zyx) of 3D numpy array with spacing size(5*2*2)
Ground truth: response binary label

Predictive Model: 

response Loss Function:  BCELogitLoss

Data:   training data has 169 patients 

Training strategy: 

          

Program starting Time: 2019-07-29 09:41:10.461379
Info: netPath = /home/hxie1/temp_netParameters/OvarianCancer/ResNeXtAtten

Info: this is the 0th fold leave for test in the 4-fold cross-validation, with 20.0% of data for independent test.

Infor: In all data of 169 files, label 0 has 51 files,
	  and label 1 has 118 files, where positive response rate = 0.6982248520710059 in full data
Infor: the independent test set has 34 files,and Training including validation Set has 135 files which will be divided into 4 folds.
In the independent test set of 34 files, 0 has 10, 1 has 24, the rate of 1s is 0.7058823529411765
In this test_0 dataset, total 34 files, where 1 has 24 with rate of 0.7058823529411765
In this train_0 dataset, total 100 files, where 1 has 70 with rate of 0.7
In this validation_0 dataset, total 35 files, where 1 has 24 with rate of 0.6857142857142857
=== Network trains from scratch ====
Network has total 505,620 parameters.
Info: program will use 2 GPUs.
Loss Functions List: BCEWithLogitsLoss with weight of 1; 

Hints: Optimal_Result = Yes = 1,  Optimal_Result = No = 0 

Epoch	TrLoss	Accura	TPR_r	TNR_r		VaLoss	Accura	TPR_r	TNR_r		TeLoss	Accura	TPR_r	TNR_r
0	0.4027	0.5300	0.5286	0.5333		0.4007	0.6857	1.0000	0.0000		0.3910	0.6471	0.9167	0.0000
5	0.3758	0.7500	0.8143	0.6000		0.4476	0.6000	0.7500	0.2727		0.4810	0.6471	0.7917	0.3000
10	0.2984	0.8000	0.8000	0.8000		1.1126	0.6857	0.9167	0.1818		0.7059	0.7059	0.9167	0.2000
15	0.2601	0.7500	0.7000	0.8667		0.9602	0.6571	0.8333	0.2727		0.8150	0.6471	0.8333	0.2000
20	0.3243	0.6400	0.5143	0.9333		0.9085	0.6000	0.7500	0.2727		0.5661	0.6765	0.7917	0.4000
25	0.2282	0.8200	0.8286	0.8000		1.2834	0.6286	0.9167	0.0000		1.0283	0.6765	0.9167	0.1000
30	0.2359	0.7900	0.7857	0.8000		0.9094	0.6286	0.7083	0.4545		0.8111	0.4412	0.4583	0.4000
35	0.2189	0.8400	0.8857	0.7333		0.8108	0.5429	0.5833	0.4545		0.7809	0.5294	0.5000	0.6000
40	0.2216	0.9200	0.9286	0.9000		1.1363	0.6571	0.8750	0.1818		0.8579	0.6765	0.8750	0.2000
45	0.1735	0.8900	0.8714	0.9333		1.0542	0.6000	0.7917	0.1818		0.7218	0.6765	0.8750	0.2000
50	0.1588	0.9100	0.9000	0.9333		1.3944	0.7429	0.8750	0.4545		0.9627	0.7059	0.8750	0.3000
55	0.1891	0.9300	0.9429	0.9000		1.2968	0.7143	0.8750	0.3636		0.9892	0.6765	0.8333	0.3000
60	0.1149	0.9400	0.9429	0.9333		1.3427	0.6000	0.7083	0.3636		0.7539	0.7353	0.7917	0.6000
65	0.1046	0.9500	0.9286	1.0000		1.2098	0.6000	0.6667	0.4545		0.8357	0.5294	0.4583	0.7000
70	0.1626	0.9300	0.9286	0.9333		1.3584	0.6571	0.7500	0.4545		0.8593	0.7353	0.7500	0.7000
75	0.1135	0.9200	0.9143	0.9333		1.3677	0.6000	0.7083	0.3636		0.9145	0.6176	0.6667	0.5000
80	0.0877	0.9500	0.9429	0.9667		1.3495	0.4857	0.5000	0.4545		1.0876	0.5588	0.5000	0.7000
85	0.1068	0.9400	0.9429	0.9333		1.4327	0.6857	0.7917	0.4545		0.9259	0.6471	0.7917	0.3000
90	0.1021	0.9500	0.9286	1.0000		1.5299	0.6286	0.7083	0.4545		1.0107	0.7059	0.7083	0.7000
95	0.1277	0.9700	0.9714	0.9667		1.5044	0.6571	0.7500	0.4545		0.9996	0.7353	0.7500	0.7000
100	0.0427	0.9700	0.9571	1.0000		1.4489	0.6571	0.7500	0.4545		0.9930	0.6765	0.7500	0.5000
