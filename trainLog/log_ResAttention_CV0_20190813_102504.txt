=============training from sratch============
Program ID: 14894

Program command: 
 ['TrainResAttentionNet.py', '/home/hxie1/temp_netParameters/OvarianCancer/STNResNeXt', '/home/hxie1/data/OvarianCancerCT/pixelSize223/numpy', '/home/hxie1/data/OvarianCancerCT/patientResponseDict.json', '0', '0']

Major program changes: 
            ResNeXt-based Attention Net: use 2D network to implement 3D convolution without losing 3D context information. 
            0   the input is a 3D full volume without any cropping; 
            1   Use slices as features channels in convolutions,  and use 1*1 convolution along slices direction to implement z direction convolution followed by 3*3 convolutino inside slice planes;
                It just uses three cascading 2D convolutions (first z, then xy, and z direction again) to implement 3D convolution, like in the paper of ResNeXt below.
                The benefits of this design:
                A   reduce network parameters, hoping to reducing overfitting;
                B   speed up training;
                C   this implemented 3D convolutions are all in full slices space;
            2   use group convolution to implement thick slice convolution to increase the network representation capability;
            3   Use ResNeXt-based module like Paper "Aggregated Residual Transformations for Deep Neural Networks " 
                (Link: http://openaccess.thecvf.com/content_cvpr_2017/html/Xie_Aggregated_Residual_Transformations_CVPR_2017_paper.html);
            4   use rich 2D affine transforms slice by slice and concatenate them to implement 3D data augmentation;
            5   20% data for independent test, remaining 80% data for 4-fold cross validation;
            6   add lossweight to adjust positive samples to 3/7 posweight in BCEWithLogitsLoss;
            
            Update:
            1    reduced network parameters to 3.14 million in July 27th, 2019, 0840am
            2    at 15:00 of July 27th, 2019, reduce network parameter again. Now each stage has 160 filters, with 1.235 million parameters
            3    keep 2) parameter, change all maxpooling into average pooling.
            4    At July 29th 09:37am, 2019, reduce filters to 96 to further reduce parameters, keep avgPool.
            5    at July 29th 11:25am, 2019,  reduce filter number to 48, and redue one stage
            6    at July 29th 12:41, 2019:
                    add GPUID in command line;
                    use SGD optimizer, instead of Adam
                    add numbers of filters along deeper layer with step 12.
                    add saveDir's tims stamp;
            7    at July 29th 15:18, 2019,
                    change learning rate step_size = 5 from 10;
                    before FC, we use conv2d
                    learning rate start at 0.5.
            8    at July 30th 03:00, 2019:
                    add learning rate print;
                    use convStride =2;
                    add filter number by 2 times along deeper layers.
            9    at July 30th, 10:13, 2019:
                    add MaxPool2d in stage1;
                    add final filters to 2048.
            10   at July 30th, 15:23, 2019
                    final conv layer filter number: 1024
            11   at Aug 10th, 2019:
                    A. Add new patient data; and exclude non-standard patient data;
                    B. test the k-th fold,  validation on the (k+1)th fold;
                    C. new inputsize: 231*251*251 with pixels size 3*2*2 mm
                    D. window level shresthold [0,300]
                    E. put data padding in to converting from nrrd to numpy;
                    F. Add STN network as first laye of network
                    G. change input data into gaussian normalization in slice by slice; (x-mean)/std;
            12   Aug 12th, 2019
                    A. fix the bug that SITk reads int imape, and normalization into interger error;
                    B  test without SPN.           
            13   Aug 13th, 2010
                    A change input data into Gausssian distribution with non-zero mean,
                      it will make the padding zero do not occupy meaning of gaussian distribution.        
                    
                                                        
                    
            
            
Discarded changes:                  
                  

Experiment setting:
Input CT data: maximum size 140*251*251 (zyx) of 3D numpy array with spacing size(5*2*2)
Ground truth: response binary label

Predictive Model: 

response Loss Function:  BCELogitLoss

Data:   total 220 patients, 5-fold cross validation, test 45, validation 45, and training 130.  

Training strategy: 

          

Program starting Time: 2019-08-13 10:25:04.802845
Info: netPath = /home/hxie1/temp_netParameters/OvarianCancer/STNResNeXt/20190813_102504

Info: this is the 0th fold leave for test in the 5-fold cross-validation.

program re-initializes all input files list, which will lead previous all K_fold cross validation invalid.
Infor: In all data of 220 files, label 0 has 77 files,
	  and label 1 has 143 files, where positive response rate = 0.65 in full data
5-fold cross validation: the 0th fold is for test, the 1th fold is for validation, remaining folds are for training.
training dataset:	 total 130 files, where 1 has 85.0 with rate of 0.6538461538461539
validation dataset:	 total 45 files, where 1 has 29.0 with rate of 0.6444444444444445
test dataset:	 total 45 files, where 1 has 29.0 with rate of 0.6444444444444445
=== Network trains from scratch ====
Network has total 77,852,006 parameters.
Loss Functions List: BCEWithLogitsLoss with weight of 1; 

Hints: Optimal_Result = Yes = 1,  Optimal_Result = No = 0 

Epoch	LearningRate		TrLoss	Accura	TPR_r	TNR_r		VaLoss	Accura	TPR_r	TNR_r		TeLoss	Accura	TPR_r	TNR_r
0	1.0000e-05		0.5024	0.4462	0.3059	0.7111		0.4611	0.6444	1.0000	0.0000		0.4612	0.6444	1.0000	0.0000
5	1.0000e-05		0.4884	0.5692	0.6941	0.3333		0.4492	0.6222	0.8276	0.2500		0.4597	0.6444	0.8621	0.2500
10	9.5000e-06		0.5134	0.4154	0.2941	0.6444		0.4998	0.4444	0.2069	0.8750		0.4609	0.4667	0.2414	0.8750
15	9.5000e-06		0.4884	0.4923	0.4000	0.6667		0.4862	0.4889	0.2414	0.9375		0.5431	0.3556	0.1724	0.6875
20	9.0250e-06		0.4914	0.4923	0.5059	0.4667		0.4874	0.4000	0.2414	0.6875		0.4916	0.4444	0.2759	0.7500
25	9.0250e-06		0.4916	0.5231	0.4941	0.5778		0.4863	0.4000	0.3103	0.5625		0.4773	0.6000	0.5862	0.6250
30	8.5737e-06		0.4761	0.5308	0.4706	0.6444		0.5125	0.3556	0.2069	0.6250		0.5072	0.4889	0.3448	0.7500
35	8.5737e-06		0.4845	0.5385	0.5412	0.5333		0.4770	0.4444	0.4828	0.3750		0.4935	0.5556	0.6207	0.4375
40	8.1451e-06		0.4940	0.5000	0.4706	0.5556		0.4881	0.4000	0.2759	0.6250		0.5717	0.4667	0.2414	0.8750
45	8.1451e-06		0.5024	0.4385	0.2706	0.7556		0.5172	0.4667	0.3448	0.6875		0.5391	0.4667	0.3103	0.7500
50	7.7378e-06		0.4922	0.4769	0.4706	0.4889		0.4620	0.5556	0.6897	0.3125		0.5354	0.5111	0.5862	0.3750
55	7.7378e-06		0.4890	0.5385	0.5882	0.4444		0.4696	0.5556	0.7241	0.2500		0.5755	0.6444	0.7931	0.3750
60	7.3509e-06		0.4615	0.5846	0.5647	0.6222		0.4495	0.5111	0.5862	0.3750		0.5489	0.5778	0.7586	0.2500
65	7.3509e-06		0.4787	0.5769	0.6588	0.4222		0.4448	0.5111	0.5172	0.5000		0.5235	0.6000	0.6207	0.5625
70	6.9834e-06		0.4704	0.5769	0.5882	0.5556		0.4881	0.6000	0.6897	0.4375		0.5120	0.6222	0.7241	0.4375
75	6.9834e-06		0.4801	0.5692	0.6588	0.4000		0.4208	0.5778	0.6207	0.5000		0.5373	0.4889	0.6552	0.1875
80	6.6342e-06		0.4839	0.5154	0.5294	0.4889		0.4688	0.5333	0.5862	0.4375		0.6211	0.4444	0.4483	0.4375
85	6.6342e-06		0.4952	0.4231	0.2706	0.7111		0.4792	0.4444	0.2759	0.7500		0.5618	0.5111	0.2759	0.9375
90	6.3025e-06		0.4777	0.5769	0.6471	0.4444		0.4419	0.6222	0.5862	0.6875		0.6202	0.5333	0.4828	0.6250
95	6.3025e-06		0.4757	0.5385	0.5059	0.6000		0.4533	0.6000	0.5862	0.6250		0.5520	0.6000	0.5517	0.6875
100	5.9874e-06		0.4679	0.6385	0.7765	0.3778		0.4708	0.5778	0.6897	0.3750		0.5466	0.5556	0.7241	0.2500
105	5.9874e-06		0.4865	0.6308	0.8353	0.2444		0.4548	0.5333	0.5517	0.5000		0.6021	0.5778	0.6897	0.3750
110	5.6880e-06		0.4942	0.5769	0.6941	0.3556		0.4538	0.5333	0.4828	0.6250		0.6440	0.6222	0.6897	0.5000
115	5.6880e-06		0.4782	0.5769	0.6353	0.4667		0.5034	0.4667	0.3793	0.6250		0.6738	0.5111	0.4483	0.6250
120	5.4036e-06		0.4940	0.5000	0.4706	0.5556		0.4837	0.4889	0.4138	0.6250		0.5616	0.5111	0.4828	0.5625
125	5.4036e-06		0.4808	0.5538	0.5529	0.5556		0.5067	0.4444	0.3103	0.6875		0.6446	0.4444	0.3103	0.6875
130	5.1334e-06		0.4562	0.5923	0.6353	0.5111		0.4722	0.5333	0.5172	0.5625		0.5497	0.5333	0.6897	0.2500
135	5.1334e-06		0.4723	0.5769	0.6118	0.5111		0.4778	0.5333	0.4483	0.6875		0.6156	0.5333	0.4828	0.6250
