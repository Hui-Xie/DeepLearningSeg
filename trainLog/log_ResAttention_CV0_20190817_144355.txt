=============training from sratch============
Program ID: 520

Program command: 
 ['TrainResAttentionNet.py', '/home/hxie1/temp_netParameters/OvarianCancer/STNResNeXt', '1', '/home/hxie1/data/OvarianCancerCT/pixelSize223/numpy', '/home/hxie1/data/OvarianCancerCT/patientResponseDict.json', '0', '2,3']

Major program changes: 
            ResNeXt-based Attention Net: use 2D network to implement 3D convolution without losing 3D context information. 
            0   the input is a 3D full volume without any cropping; 
            1   Use slices as features channels in convolutions,  and use 1*1 convolution along slices direction to implement z direction convolution followed by 3*3 convolutino inside slice planes;
                It just uses three cascading 2D convolutions (first z, then xy, and z direction again) to implement 3D convolution, like in the paper of ResNeXt below.
                The benefits of this design:
                A   reduce network parameters, hoping to reducing overfitting;
                B   speed up training;
                C   this implemented 3D convolutions are all in full slices space;
            2   use group convolution to implement thick slice convolution to increase the network representation capability;
            3   Use ResNeXt-based module like Paper "Aggregated Residual Transformations for Deep Neural Networks " 
                (Link: http://openaccess.thecvf.com/content_cvpr_2017/html/Xie_Aggregated_Residual_Transformations_CVPR_2017_paper.html);
            4   use rich 2D affine transforms slice by slice and concatenate them to implement 3D data augmentation;
            5   20% data for independent test, remaining 80% data for 4-fold cross validation;
            6   add lossweight to adjust positive samples to 3/7 posweight in BCEWithLogitsLoss;
            
            Update:
            1    reduced network parameters to 3.14 million in July 27th, 2019, 0840am
            2    at 15:00 of July 27th, 2019, reduce network parameter again. Now each stage has 160 filters, with 1.235 million parameters
            3    keep 2) parameter, change all maxpooling into average pooling.
            4    At July 29th 09:37am, 2019, reduce filters to 96 to further reduce parameters, keep avgPool.
            5    at July 29th 11:25am, 2019,  reduce filter number to 48, and redue one stage
            6    at July 29th 12:41, 2019:
                    add GPUID in command line;
                    use SGD optimizer, instead of Adam
                    add numbers of filters along deeper layer with step 12.
                    add saveDir's tims stamp;
            7    at July 29th 15:18, 2019,
                    change learning rate step_size = 5 from 10;
                    before FC, we use conv2d
                    learning rate start at 0.5.
            8    at July 30th 03:00, 2019:
                    add learning rate print;
                    use convStride =2;
                    add filter number by 2 times along deeper layers.
            9    at July 30th, 10:13, 2019:
                    add MaxPool2d in stage1;
                    add final filters to 2048.
            10   at July 30th, 15:23, 2019
                    final conv layer filter number: 1024
            11   at Aug 10th, 2019:
                    A. Add new patient data; and exclude non-standard patient data;
                    B. test the k-th fold,  validation on the (k+1)th fold;
                    C. new inputsize: 231*251*251 with pixels size 3*2*2 mm
                    D. window level shresthold [0,300]
                    E. put data padding in to converting from nrrd to numpy;
                    F. Add STN network as first laye of network
                    G. change input data into gaussian normalization in slice by slice; (x-mean)/std;
            12   Aug 12th, 2019
                    A. fix the bug that SITk reads int imape, and normalization into interger error;
                    B  test without SPN.           
            13   Aug 13th, 2019
                    A change input data into Gausssian distribution with non-zero mean,
                      it will make the padding zero do not occupy meaning of gaussian distribution.        
                    B add filters in the ResNeXt network to 128 at first stage, and reduce batchSize to 3. 
                    C Add STN at the beginning of the ResNeXt network
            14   Aug 14th, 2019
                    A. Fix the Bug the STN convert all image into 0 problem;
                    B. change DataTransform: change shear into [-30, 30], and add scale[0.6,1.2]
                    C  put STN at teh begginning of the network;
                    D  change optimizer from SGD to Adam; and change learning rate decay with gamma=0.5 per 20 steps.                                             
            15   Aug 16th, 2019
                    A The affine matrix in the STN is divided by its spectral norm;
                    B All conv layer add spectralNorm, while all FC layer do not add spectral Norm;
                    C reduce initial LR at 0.0001, and decay step to 30.
            16   Aug 17th, 2019
                    A  Cancel STN;
                    B  Add LeakyReLU;
                    C  before final FC layer, add ReLU and LocalResponseNorm   
            17   Aug 17th, 2019:10:44am
                    A enable STN;
                    B STN support LeakyReLU and localResponseNorm  
            18   Aug 17th, 2019 14:38 pm
                    A  del STN at beginining;
                    B  put STN at final 2 layer before FC.              
                                
            
            
Discarded changes:                  
                  

Experiment setting:
Input CT data: maximum size 140*251*251 (zyx) of 3D numpy array with spacing size(5*2*2)
Ground truth: response binary label

Predictive Model: 

response Loss Function:  BCELogitLoss

Data:   total 220 patients, 5-fold cross validation, test 45, validation 45, and training 130.  

Training strategy: 

          

Program starting Time: 2019-08-17 14:43:55.756001
Info: netPath = /home/hxie1/temp_netParameters/OvarianCancer/STNResNeXt/20190817_144355

Info: this is the 0th fold leave for test in the 5-fold cross-validation.

Infor: In all data of 220 files, label 0 has 77 files,
	  and label 1 has 143 files, where positive response rate = 0.65 in full data
5-fold cross validation: the 0th fold is for test, the 1th fold is for validation, remaining folds are for training.
training dataset:	 total 130 files, where 1 has 85.0 with rate of 0.6538461538461539
validation dataset:	 total 45 files, where 1 has 29.0 with rate of 0.6444444444444445
test dataset:	 total 45 files, where 1 has 29.0 with rate of 0.6444444444444445
=== Network trains from scratch ====
Network has total 331,724,274 parameters.
Info: program will use GPU [2, 3] from all 4 GPUs.
Loss Functions List: BCEWithLogitsLoss with weight of 1; 

Hints: Optimal_Result = Yes = 1,  Optimal_Result = No = 0 

Epoch	LearningRate		TrLoss	Accura	TPR_r	TNR_r		VaLoss	Accura	TPR_r	TNR_r		TeLoss	Accura	TPR_r	TNR_r
0	1.0000e-04		4.9433	0.5231	0.4471	0.6667		0.4794	0.6444	1.0000	0.0000		0.4794	0.6444	1.0000	0.0000
5	1.0000e-04		0.4905	0.5692	0.7529	0.2222		0.4944	0.3556	0.1379	0.7500		0.5075	0.3556	0.1034	0.8125
10	1.0000e-04		0.4881	0.5385	0.5647	0.4889		0.4953	0.4222	0.2759	0.6875		0.5592	0.4444	0.2069	0.8750
15	1.0000e-04		0.5003	0.5000	0.5412	0.4222		0.5031	0.4889	0.4828	0.5000		0.4884	0.5333	0.5862	0.4375
20	1.0000e-04		0.4977	0.5231	0.5294	0.5111		0.7072	0.3556	0.0345	0.9375		0.6512	0.3778	0.0690	0.9375
25	1.0000e-04		0.4861	0.4923	0.3647	0.7333		0.6330	0.3778	0.3793	0.3750		0.6947	0.5333	0.4828	0.6250
30	1.0000e-04		0.4824	0.6385	0.7059	0.5111		0.6045	0.6667	0.9310	0.1875		0.5962	0.5333	0.8276	0.0000
35	1.0000e-04		0.4531	0.6077	0.5059	0.8000		1.0675	0.3556	0.0345	0.9375		1.2822	0.4000	0.2069	0.7500
40	5.0000e-05		0.4773	0.6846	0.8588	0.3556		0.5875	0.4667	0.4138	0.5625		0.5491	0.5778	0.5862	0.5625
45	5.0000e-05		0.4394	0.6692	0.7294	0.5556		0.5543	0.5778	0.6552	0.4375		0.6446	0.5111	0.5862	0.3750
50	5.0000e-05		0.4287	0.6769	0.6235	0.7778		0.6037	0.5778	0.6207	0.5000		0.6842	0.4889	0.5172	0.4375
55	5.0000e-05		0.3800	0.6923	0.6588	0.7556		1.5288	0.3778	0.0345	1.0000		1.8970	0.3333	0.0690	0.8125
60	5.0000e-05		0.3761	0.7077	0.6471	0.8222		0.6411	0.4000	0.3793	0.4375		0.6833	0.5333	0.4828	0.6250
65	5.0000e-05		0.3777	0.6846	0.6118	0.8222		0.8233	0.5333	0.7241	0.1875		0.6820	0.6222	0.7586	0.3750
70	5.0000e-05		0.3038	0.7538	0.7294	0.8000		1.3579	0.5778	0.8276	0.1250		0.9417	0.6667	0.9655	0.1250
75	5.0000e-05		0.2588	0.8154	0.8000	0.8444		0.6769	0.4444	0.3793	0.5625		0.8521	0.3778	0.2414	0.6250
80	2.5000e-05		0.3540	0.7077	0.6471	0.8222		0.7709	0.5333	0.4828	0.6250		0.6769	0.4444	0.3103	0.6875
85	2.5000e-05		0.3338	0.8077	0.8118	0.8000		0.9839	0.5556	0.7586	0.1875		0.8684	0.6222	0.7586	0.3750
90	2.5000e-05		0.2659	0.8231	0.8235	0.8222		1.0295	0.4222	0.3103	0.6250		0.9487	0.4444	0.2759	0.7500
95	2.5000e-05		0.2222	0.8923	0.8941	0.8889		1.1952	0.3778	0.2414	0.6250		1.3030	0.3333	0.1379	0.6875
100	2.5000e-05		0.2041	0.8692	0.8706	0.8667		0.9631	0.6000	0.7586	0.3125		0.6947	0.6444	0.8621	0.2500
105	2.5000e-05		0.1874	0.8923	0.9059	0.8667		1.1548	0.4667	0.4483	0.5000		1.1913	0.4444	0.4138	0.5000
110	2.5000e-05		0.2095	0.9000	0.9059	0.8889		0.8840	0.4222	0.2414	0.7500		0.9512	0.3778	0.1724	0.7500
115	2.5000e-05		0.2035	0.9077	0.9529	0.8222		1.6476	0.3778	0.0690	0.9375		1.5496	0.3556	0.0000	1.0000
120	1.2500e-05		0.1692	0.9231	0.9412	0.8889		0.9305	0.4444	0.4483	0.4375		0.7795	0.5333	0.4483	0.6875
125	1.2500e-05		0.1848	0.9077	0.9529	0.8222		0.9652	0.5556	0.5517	0.5625		0.9033	0.4667	0.4138	0.5625
130	1.2500e-05		0.1510	0.9154	0.9059	0.9333		0.9152	0.5111	0.5517	0.4375		0.7644	0.4667	0.3793	0.6250
135	1.2500e-05		0.0686	0.9692	0.9529	1.0000		1.1599	0.5111	0.5862	0.3750		0.9311	0.5778	0.6207	0.5000
140	1.2500e-05		0.0799	0.9615	0.9647	0.9556		1.4045	0.5778	0.5862	0.5625		1.2651	0.4889	0.3793	0.6875
145	1.2500e-05		0.1536	0.9000	0.9059	0.8889		1.2711	0.4222	0.1724	0.8750		1.2682	0.2889	0.0345	0.7500
150	1.2500e-05		0.0386	0.9692	0.9647	0.9778		1.6512	0.5778	0.7586	0.2500		1.0882	0.6000	0.7931	0.2500
155	1.2500e-05		0.1314	0.9231	0.9765	0.8222		1.2620	0.4222	0.2069	0.8125		1.3304	0.3556	0.1379	0.7500
160	6.2500e-06		0.0490	0.9692	0.9529	1.0000		1.2759	0.5111	0.4138	0.6875		1.3246	0.4444	0.2759	0.7500
165	6.2500e-06		0.0950	0.9462	0.9529	0.9333		1.2035	0.4889	0.3793	0.6875		1.2858	0.4000	0.2759	0.6250
