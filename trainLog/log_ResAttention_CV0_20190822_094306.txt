=============training from sratch============
Program ID: 20596

Program command: 
 ['TrainResAttentionNet.py', '/home/hxie1/temp_netParameters/OvarianCancer/STNResNeXt', '1', '/home/hxie1/data/OvarianCancerCT/pixelSize223/numpy', '/home/hxie1/data/OvarianCancerCT/patientResponseDict.json', '0', '2,0']

Major program changes: 
            ResNeXt-based Attention Net: use 2D network to implement 3D convolution without losing 3D context information. 
            0   the input is a 3D full volume without any cropping; 
            1   Use slices as features channels in convolutions,  and use 1*1 convolution along slices direction to implement z direction convolution followed by 3*3 convolutino inside slice planes;
                It just uses three cascading 2D convolutions (first z, then xy, and z direction again) to implement 3D convolution, like in the paper of ResNeXt below.
                The benefits of this design:
                A   reduce network parameters, hoping to reducing overfitting;
                B   speed up training;
                C   this implemented 3D convolutions are all in full slices space;
            2   use group convolution to implement thick slice convolution to increase the network representation capability;
            3   Use ResNeXt-based module like Paper "Aggregated Residual Transformations for Deep Neural Networks " 
                (Link: http://openaccess.thecvf.com/content_cvpr_2017/html/Xie_Aggregated_Residual_Transformations_CVPR_2017_paper.html);
            4   use rich 2D affine transforms slice by slice and concatenate them to implement 3D data augmentation;
            5   20% data for independent test, remaining 80% data for 4-fold cross validation;
            6   add lossweight to adjust positive samples to 3/7 posweight in BCEWithLogitsLoss;
            
            Update:
            1    reduced network parameters to 3.14 million in July 27th, 2019, 0840am
            2    at 15:00 of July 27th, 2019, reduce network parameter again. Now each stage has 160 filters, with 1.235 million parameters
            3    keep 2) parameter, change all maxpooling into average pooling.
            4    At July 29th 09:37am, 2019, reduce filters to 96 to further reduce parameters, keep avgPool.
            5    at July 29th 11:25am, 2019,  reduce filter number to 48, and redue one stage
            6    at July 29th 12:41, 2019:
                    add GPUID in command line;
                    use SGD optimizer, instead of Adam
                    add numbers of filters along deeper layer with step 12.
                    add saveDir's tims stamp;
            7    at July 29th 15:18, 2019,
                    change learning rate step_size = 5 from 10;
                    before FC, we use conv2d
                    learning rate start at 0.5.
            8    at July 30th 03:00, 2019:
                    add learning rate print;
                    use convStride =2;
                    add filter number by 2 times along deeper layers.
            9    at July 30th, 10:13, 2019:
                    add MaxPool2d in stage1;
                    add final filters to 2048.
            10   at July 30th, 15:23, 2019
                    final conv layer filter number: 1024
            11   at Aug 10th, 2019:
                    A. Add new patient data; and exclude non-standard patient data;
                    B. test the k-th fold,  validation on the (k+1)th fold;
                    C. new inputsize: 231*251*251 with pixels size 3*2*2 mm
                    D. window level shresthold [0,300]
                    E. put data padding in to converting from nrrd to numpy;
                    F. Add STN network as first laye of network
                    G. change input data into gaussian normalization in slice by slice; (x-mean)/std;
            12   Aug 12th, 2019
                    A. fix the bug that SITk reads int imape, and normalization into interger error;
                    B  test without SPN.           
            13   Aug 13th, 2019
                    A change input data into Gausssian distribution with non-zero mean,
                      it will make the padding zero do not occupy meaning of gaussian distribution.        
                    B add filters in the ResNeXt network to 128 at first stage, and reduce batchSize to 3. 
                    C Add STN at the beginning of the ResNeXt network
            14   Aug 14th, 2019
                    A. Fix the Bug the STN convert all image into 0 problem;
                    B. change DataTransform: change shear into [-30, 30], and add scale[0.6,1.2]
                    C  put STN at teh begginning of the network;
                    D  change optimizer from SGD to Adam; and change learning rate decay with gamma=0.5 per 20 steps.                                             
            15   Aug 16th, 2019
                    A The affine matrix in the STN is divided by its spectral norm;
                    B All conv layer add spectralNorm, while all FC layer do not add spectral Norm;
                    C reduce initial LR at 0.0001, and decay step to 30.
            16   Aug 17th, 2019
                    A  Cancel STN;
                    B  Add LeakyReLU;
                    C  before final FC layer, add ReLU and LocalResponseNorm   
            17   Aug 17th, 2019:10:44am
                    A enable STN;
                    B STN support LeakyReLU and localResponseNorm  
            18   Aug 17th, 2019 14:38 pm
                    A  del STN at beginining;
                    B  put STN at final 2 layer before FC. 
            19  Aug 17th 18:09 2019
                    A add surgical result file support;                    
            20  Aug 18th 08:00 am 2019
                    A  change all bias in Conv2d, and Linear into True.   
            21  Aug 19th 10:33am 2019
                    A initalize the bias in the final Linear layer as 0.3; (1-2*0.65 = -0.3)
                    16:17 pm:
                    B  add inductive bias 0.3 in the network forward function. 
                    C  initial LR =0.1, with decay steps =30                          
            22  Aug 20th 10:24am 2019
                    A change inductive bias = 0.2;
                    16:29pm:
                    B add modulation factor in the STN
            23  Aug 21th, 10:16, 2019
                    A delete the inductive bias in the final FC.  
                    15:47 pm
                    B change LRscheduler into MultiStepLR;      
            
Discarded changes:                  
                  

Experiment setting:
Input CT data: maximum size 140*251*251 (zyx) of 3D numpy array with spacing size(5*2*2)
Ground truth: response binary label

Predictive Model: 

response Loss Function:  BCELogitLoss

Data:   total 220 patients, 5-fold cross validation, test 45, validation 45, and training 130.  

Training strategy: 

          

Program starting Time: 2019-08-22 09:43:06.408342
Info: netPath = /home/hxie1/temp_netParameters/OvarianCancer/STNResNeXt/20190822_094306

Info: this is the 0th fold leave for test in the 5-fold cross-validation.

Infor: In all data of 220 files, label 0 has 77 files,
	  and label 1 has 143 files, where positive response rate = 0.65 in full data
5-fold cross validation: the 0th fold is for test, the 1th fold is for validation, remaining folds are for training.
training dataset:	 total 130 files, where 1 has 85.0 with rate of 0.6538461538461539
validation dataset:	 total 45 files, where 1 has 29.0 with rate of 0.6444444444444445
test dataset:	 total 45 files, where 1 has 29.0 with rate of 0.6444444444444445
Info: batchSize = 6

=== Network trains from scratch ====
Network has total 331,796,931 parameters.
This predict optimal response.
Info: program will use GPU [2, 0] from all 4 GPUs.
Loss Functions List: BCEWithLogitsLoss with weight of 1; 

Hints: Optimal_Result = Yes = 1,  Optimal_Result = No = 0 

Epoch	LearningRate		TrLoss	Accura	TPR_r	TNR_r		VaLoss	Accura	TPR_r	TNR_r		TeLoss	Accura	TPR_r	TNR_r
0	1.0000e-01		54.6932	0.5615	0.5529	0.5778		5.7128	0.3556	0.0000	1.0000		5.7136	0.3556	0.0000	1.0000
5	1.0000e-01		0.9678	0.5538	0.5765	0.5111		3.1246	0.6444	1.0000	0.0000		3.1121	0.6444	1.0000	0.0000
10	1.0000e-01		1.0016	0.5077	0.4824	0.5556		1.1560	0.3556	0.0000	1.0000		1.1400	0.3556	0.0000	1.0000
15	1.0000e-01		1.1957	0.5308	0.4941	0.6000		1.2503	0.3556	0.0000	1.0000		1.2441	0.3556	0.0000	1.0000
20	1.0000e-01		0.8542	0.4692	0.4118	0.5778		0.5159	0.6444	1.0000	0.0000		0.5158	0.6444	1.0000	0.0000
25	1.0000e-01		1.1661	0.4846	0.4235	0.6000		0.5251	0.6444	1.0000	0.0000		0.5215	0.6444	1.0000	0.0000
30	1.0000e-01		1.6266	0.5615	0.6588	0.3778		1.3207	0.3556	0.0000	1.0000		1.3125	0.3556	0.0000	1.0000
35	1.0000e-01		0.6950	0.5154	0.5176	0.5111		0.6207	0.3556	0.0000	1.0000		0.6209	0.3556	0.0000	1.0000
40	1.0000e-01		0.7352	0.5154	0.4824	0.5778		0.4997	0.6444	1.0000	0.0000		0.5000	0.6444	1.0000	0.0000
45	1.0000e-01		0.6001	0.4538	0.6000	0.1778		0.5385	0.3556	0.0000	1.0000		0.5395	0.3556	0.0000	1.0000
50	1.0000e-02		0.5983	0.4231	0.3647	0.5333		0.5365	0.6444	1.0000	0.0000		0.5339	0.6444	1.0000	0.0000
55	1.0000e-02		0.4993	0.4692	0.5529	0.3111		0.4823	0.3556	0.0000	1.0000		0.4822	0.3556	0.0000	1.0000
60	1.0000e-02		0.5112	0.4231	0.2235	0.8000		0.5324	0.6444	1.0000	0.0000		0.5295	0.6444	1.0000	0.0000
65	1.0000e-02		0.4909	0.4231	0.1882	0.8667		0.4802	0.6444	1.0000	0.0000		0.4797	0.6444	1.0000	0.0000
70	1.0000e-02		0.4930	0.5462	0.6118	0.4222		0.4908	0.3556	0.0000	1.0000		0.4907	0.3556	0.0000	1.0000
75	1.0000e-02		0.4957	0.5000	0.4235	0.6444		0.4844	0.6444	1.0000	0.0000		0.4836	0.6444	1.0000	0.0000
80	1.0000e-02		0.5104	0.5308	0.6000	0.4000		0.5072	0.3556	0.0000	1.0000		0.5075	0.3556	0.0000	1.0000
85	1.0000e-02		0.4911	0.5308	0.6353	0.3333		0.4869	0.3556	0.0000	1.0000		0.4868	0.3556	0.0000	1.0000
90	1.0000e-02		0.4998	0.4231	0.3765	0.5111		0.4816	0.3556	0.0000	1.0000		0.4813	0.3556	0.0000	1.0000
95	1.0000e-02		0.4928	0.4846	0.4235	0.6000		0.4822	0.3556	0.0000	1.0000		0.4820	0.3556	0.0000	1.0000
100	1.0000e-02		0.4954	0.5462	0.6353	0.3778		0.4799	0.6444	1.0000	0.0000		0.4797	0.6444	1.0000	0.0000
105	1.0000e-02		0.5126	0.5923	0.8824	0.0444		0.4877	0.3556	0.0000	1.0000		0.4876	0.3556	0.0000	1.0000
110	1.0000e-02		0.5094	0.5462	0.6118	0.4222		0.5082	0.3556	0.0000	1.0000		0.5082	0.3556	0.0000	1.0000
115	1.0000e-02		0.5011	0.4692	0.4471	0.5111		0.4796	0.6444	1.0000	0.0000		0.4794	0.6444	1.0000	0.0000
120	1.0000e-02		0.5022	0.5154	0.5176	0.5111		0.4821	0.3556	0.0000	1.0000		0.4819	0.3556	0.0000	1.0000
125	1.0000e-02		0.5215	0.4385	0.4824	0.3556		0.4796	0.6444	1.0000	0.0000		0.4793	0.6444	1.0000	0.0000
130	1.0000e-02		0.5007	0.5462	0.6000	0.4444		0.4813	0.6444	1.0000	0.0000		0.4809	0.6444	1.0000	0.0000
135	1.0000e-02		0.5046	0.4692	0.5059	0.4000		0.4797	0.6444	1.0000	0.0000		0.4794	0.6444	1.0000	0.0000
