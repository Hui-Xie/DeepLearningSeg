=============training from sratch============
Program ID: 12990

Program command: 
 ['TrainResAttentionNet.py', '/home/hxie1/temp_netParameters/OvarianCancer/STNResNeXt', '/home/hxie1/data/OvarianCancerCT/pixelSize223/numpy', '/home/hxie1/data/OvarianCancerCT/patientResponseDict.json', '0', '0']

Major program changes: 
            ResNeXt-based Attention Net: use 2D network to implement 3D convolution without losing 3D context information. 
            0   the input is a 3D full volume without any cropping; 
            1   Use slices as features channels in convolutions,  and use 1*1 convolution along slices direction to implement z direction convolution followed by 3*3 convolutino inside slice planes;
                It just uses three cascading 2D convolutions (first z, then xy, and z direction again) to implement 3D convolution, like in the paper of ResNeXt below.
                The benefits of this design:
                A   reduce network parameters, hoping to reducing overfitting;
                B   speed up training;
                C   this implemented 3D convolutions are all in full slices space;
            2   use group convolution to implement thick slice convolution to increase the network representation capability;
            3   Use ResNeXt-based module like Paper "Aggregated Residual Transformations for Deep Neural Networks " 
                (Link: http://openaccess.thecvf.com/content_cvpr_2017/html/Xie_Aggregated_Residual_Transformations_CVPR_2017_paper.html);
            4   use rich 2D affine transforms slice by slice and concatenate them to implement 3D data augmentation;
            5   20% data for independent test, remaining 80% data for 4-fold cross validation;
            6   add lossweight to adjust positive samples to 3/7 posweight in BCEWithLogitsLoss;
            
            Update:
            1    reduced network parameters to 3.14 million in July 27th, 2019, 0840am
            2    at 15:00 of July 27th, 2019, reduce network parameter again. Now each stage has 160 filters, with 1.235 million parameters
            3    keep 2) parameter, change all maxpooling into average pooling.
            4    At July 29th 09:37am, 2019, reduce filters to 96 to further reduce parameters, keep avgPool.
            5    at July 29th 11:25am, 2019,  reduce filter number to 48, and redue one stage
            6    at July 29th 12:41, 2019:
                    add GPUID in command line;
                    use SGD optimizer, instead of Adam
                    add numbers of filters along deeper layer with step 12.
                    add saveDir's tims stamp;
            7    at July 29th 15:18, 2019,
                    change learning rate step_size = 5 from 10;
                    before FC, we use conv2d
                    learning rate start at 0.5.
            8    at July 30th 03:00, 2019:
                    add learning rate print;
                    use convStride =2;
                    add filter number by 2 times along deeper layers.
            9    at July 30th, 10:13, 2019:
                    add MaxPool2d in stage1;
                    add final filters to 2048.
            10   at July 30th, 15:23, 2019
                    final conv layer filter number: 1024
            11   at Aug 10th, 2019:
                    A. Add new patient data; and exclude non-standard patient data;
                    B. test the k-th fold,  validation on the (k+1)th fold;
                    C. new inputsize: 231*251*251 with pixels size 3*2*2 mm
                    D. window level shresthold [0,300]
                    E. put data padding in to converting from nrrd to numpy;
                    F. Add STN network as first laye of network
                    G. change input data into gaussian normalization in slice by slice; (x-mean)/std;
            12   Aug 12th, 2019
                    A. fix the bug that SITk reads int imape, and normalization into interger error;
                    B  test without SPN.           
            13   Aug 13th, 2010
                    A change input data into Gausssian distribution with non-zero mean,
                      it will make the padding zero do not occupy meaning of gaussian distribution.        
                    B add filters in the ResNeXt network to 128 at first stage, and reduce batchSize to 3. 
                    C Add STN at the beginning of the ResNeXt network
                                                        
                    
            
            
Discarded changes:                  
                  

Experiment setting:
Input CT data: maximum size 140*251*251 (zyx) of 3D numpy array with spacing size(5*2*2)
Ground truth: response binary label

Predictive Model: 

response Loss Function:  BCELogitLoss

Data:   total 220 patients, 5-fold cross validation, test 45, validation 45, and training 130.  

Training strategy: 

          

Program starting Time: 2019-08-13 12:53:49.430097
Info: netPath = /home/hxie1/temp_netParameters/OvarianCancer/STNResNeXt/20190813_125349

Info: this is the 0th fold leave for test in the 5-fold cross-validation.

Infor: In all data of 220 files, label 0 has 77 files,
	  and label 1 has 143 files, where positive response rate = 0.65 in full data
5-fold cross validation: the 0th fold is for test, the 1th fold is for validation, remaining folds are for training.
training dataset:	 total 130 files, where 1 has 85.0 with rate of 0.6538461538461539
validation dataset:	 total 45 files, where 1 has 29.0 with rate of 0.6444444444444445
test dataset:	 total 45 files, where 1 has 29.0 with rate of 0.6444444444444445
=== Network trains from scratch ====
Network has total 323,951,148 parameters.
Loss Functions List: BCEWithLogitsLoss with weight of 1; 

Hints: Optimal_Result = Yes = 1,  Optimal_Result = No = 0 

Epoch	LearningRate		TrLoss	Accura	TPR_r	TNR_r		VaLoss	Accura	TPR_r	TNR_r		TeLoss	Accura	TPR_r	TNR_r
0	1.0000e-05		0.4919	0.4385	0.3765	0.5556		0.4795	0.6444	1.0000	0.0000		0.4795	0.6444	1.0000	0.0000
5	1.0000e-05		0.4966	0.4538	0.4000	0.5556		0.4795	0.6444	1.0000	0.0000		0.4795	0.6444	1.0000	0.0000
10	9.5000e-06		0.5127	0.4538	0.4941	0.3778		0.4803	0.6444	1.0000	0.0000		0.4803	0.6444	1.0000	0.0000
15	9.5000e-06		0.4948	0.5000	0.4824	0.5333		0.4794	0.6444	1.0000	0.0000		0.4794	0.6444	1.0000	0.0000
20	9.0250e-06		0.5109	0.5308	0.6353	0.3333		0.4855	0.3556	0.0000	1.0000		0.4855	0.3556	0.0000	1.0000
25	9.0250e-06		0.4953	0.5000	0.5882	0.3333		0.4871	0.3556	0.0000	1.0000		0.4871	0.3556	0.0000	1.0000
30	8.5737e-06		0.5108	0.4231	0.3882	0.4889		0.4841	0.3556	0.0000	1.0000		0.4841	0.3556	0.0000	1.0000
35	8.5737e-06		0.5148	0.4385	0.3882	0.5333		0.4813	0.6444	1.0000	0.0000		0.4813	0.6444	1.0000	0.0000
40	8.1451e-06		0.5045	0.5000	0.5882	0.3333		0.4864	0.3556	0.0000	1.0000		0.4864	0.3556	0.0000	1.0000
45	8.1451e-06		0.5013	0.5308	0.5176	0.5556		0.5009	0.3556	0.0000	1.0000		0.5009	0.3556	0.0000	1.0000
50	7.7378e-06		0.5103	0.5308	0.6588	0.2889		0.4936	0.3556	0.0000	1.0000		0.4936	0.3556	0.0000	1.0000
55	7.7378e-06		0.5065	0.4385	0.4471	0.4222		0.4801	0.3556	0.0000	1.0000		0.4801	0.3556	0.0000	1.0000
60	7.3509e-06		0.5054	0.5000	0.4706	0.5556		0.4819	0.3556	0.0000	1.0000		0.4819	0.3556	0.0000	1.0000
65	7.3509e-06		0.5036	0.5154	0.6000	0.3556		0.4874	0.3556	0.0000	1.0000		0.4874	0.3556	0.0000	1.0000
70	6.9834e-06		0.4937	0.4846	0.5059	0.4444		0.4794	0.6444	1.0000	0.0000		0.4794	0.6444	1.0000	0.0000
75	6.9834e-06		0.4860	0.4846	0.4706	0.5111		0.4867	0.6444	1.0000	0.0000		0.4867	0.6444	1.0000	0.0000
80	6.6342e-06		0.5085	0.4077	0.3176	0.5778		0.4938	0.6444	1.0000	0.0000		0.4938	0.6444	1.0000	0.0000
85	6.6342e-06		0.5140	0.4846	0.4235	0.6000		0.4815	0.6444	1.0000	0.0000		0.4815	0.6444	1.0000	0.0000
90	6.3025e-06		0.4827	0.4692	0.4118	0.5778		0.4818	0.6444	1.0000	0.0000		0.4818	0.6444	1.0000	0.0000
95	6.3025e-06		0.5091	0.4692	0.4353	0.5333		0.4810	0.6444	1.0000	0.0000		0.4810	0.6444	1.0000	0.0000
100	5.9874e-06		0.4928	0.5615	0.5647	0.5556		0.4963	0.3556	0.0000	1.0000		0.4963	0.3556	0.0000	1.0000
105	5.9874e-06		0.5002	0.3923	0.2235	0.7111		0.4822	0.3556	0.0000	1.0000		0.4822	0.3556	0.0000	1.0000
110	5.6880e-06		0.4881	0.5462	0.4941	0.6444		0.4861	0.6444	1.0000	0.0000		0.4861	0.6444	1.0000	0.0000
115	5.6880e-06		0.5025	0.5154	0.5176	0.5111		0.4795	0.6444	1.0000	0.0000		0.4795	0.6444	1.0000	0.0000
120	5.4036e-06		0.5111	0.4231	0.4000	0.4667		0.4794	0.6444	1.0000	0.0000		0.4794	0.6444	1.0000	0.0000
125	5.4036e-06		0.5026	0.4846	0.6000	0.2667		0.4802	0.6444	1.0000	0.0000		0.4802	0.6444	1.0000	0.0000
130	5.1334e-06		0.5176	0.4538	0.4471	0.4667		0.4803	0.6444	1.0000	0.0000		0.4803	0.6444	1.0000	0.0000
135	5.1334e-06		0.5101	0.4692	0.5647	0.2889		0.4799	0.6444	1.0000	0.0000		0.4799	0.6444	1.0000	0.0000
140	4.8767e-06		0.5028	0.5308	0.5412	0.5111		0.4796	0.6444	1.0000	0.0000		0.4796	0.6444	1.0000	0.0000
145	4.8767e-06		0.4993	0.4692	0.5059	0.4000		0.4807	0.3556	0.0000	1.0000		0.4807	0.3556	0.0000	1.0000
150	4.6329e-06		0.4889	0.5308	0.6118	0.3778		0.4810	0.3556	0.0000	1.0000		0.4810	0.3556	0.0000	1.0000
155	4.6329e-06		0.4983	0.5615	0.6824	0.3333		0.4815	0.3556	0.0000	1.0000		0.4815	0.3556	0.0000	1.0000
160	4.4013e-06		0.5061	0.4692	0.5529	0.3111		0.4801	0.3556	0.0000	1.0000		0.4801	0.3556	0.0000	1.0000
165	4.4013e-06		0.4990	0.5615	0.6471	0.4000		0.4794	0.6444	1.0000	0.0000		0.4794	0.6444	1.0000	0.0000
170	4.1812e-06		0.5081	0.3923	0.2471	0.6667		0.4816	0.3556	0.0000	1.0000		0.4816	0.3556	0.0000	1.0000
175	4.1812e-06		0.4992	0.5462	0.7294	0.2000		0.4799	0.6444	1.0000	0.0000		0.4799	0.6444	1.0000	0.0000
180	3.9721e-06		0.4950	0.5462	0.6118	0.4222		0.4809	0.3556	0.0000	1.0000		0.4809	0.3556	0.0000	1.0000
185	3.9721e-06		0.4978	0.4385	0.4353	0.4444		0.4795	0.6444	1.0000	0.0000		0.4795	0.6444	1.0000	0.0000
190	3.7735e-06		0.4893	0.5154	0.5882	0.3778		0.4796	0.6444	1.0000	0.0000		0.4796	0.6444	1.0000	0.0000
195	3.7735e-06		0.4859	0.4077	0.1529	0.8889		0.4822	0.6444	1.0000	0.0000		0.4822	0.6444	1.0000	0.0000
200	3.5849e-06		0.5029	0.5000	0.5294	0.4444		0.4830	0.6444	1.0000	0.0000		0.4830	0.6444	1.0000	0.0000
