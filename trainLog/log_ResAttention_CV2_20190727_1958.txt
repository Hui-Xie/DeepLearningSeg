Program ID: 14444

Program command: 
 ['TrainResAttentionNet.py', '/home/hxie1/temp_netParameters/OvarianCancer/ResNeXtAtten', '/home/hxie1/data/OvarianCancerCT/Extract_ps2_2_5/images_npy', '/home/hxie1/data/OvarianCancerCT/patientResponseDict.json', '2']

Major program changes: 
            ResNeXt-based Attention Net: use 2D network to implement 3D convolution without losing 3D context information. 
            0   the input is a 3D full volume without any cropping; 
            1   Use slices as features channels in convolutions,  and use 1*1 convolution along slices direction to implement z direction convolution followed by 3*3 convolutino inside slice planes;
                It just uses three cascading 2D convolutions (first z, then xy, and z direction again) to implement 3D convolution, like in the paper of ResNeXt below.
                The benefits of this design:
                A   reduce network parameters, hoping to reducing overfitting;
                B   speed up training;
                C   this implemented 3D convolutions are all in full slices space;
            2   use group convolution to implement thick slice convolution to increase the network representation capability;
            3   Use ResNeXt-based module like Paper "Aggregated Residual Transformations for Deep Neural Networks " 
                (Link: http://openaccess.thecvf.com/content_cvpr_2017/html/Xie_Aggregated_Residual_Transformations_CVPR_2017_paper.html);
            4   use rich 2D affine transforms slice by slice and concatenate them to implement 3D data augmentation;
            5   20% data for independent test, remaining 80% data for 4-fold cross validation;
            6   add lossweight to adjust positive samples to 3/7 posweight in BCEWithLogitsLoss;
            
            Update:
            1    reduced network parameters to 3.14 million in July 27th, 2019, 0840am
            2    at 15:00 of July 27th, 2019, reduce network parameter again. Now each stage has 160 filters, with 1.235 million parameters
            3    keep 2) parameter, change all maxpooling into average pooling.
            
Discarded changes:                  
                  

Experiment setting:
Input CT data: maximum size 140*251*251 (zyx) of 3D numpy array with spacing size(5*2*2)
Ground truth: response binary label

Predictive Model: 

response Loss Function:  BCELogitLoss

Data:   training data has 169 patients 

Training strategy: 

          

Program starting Time: 2019-07-27 19:58:22.142652
Info: netPath = /home/hxie1/temp_netParameters/OvarianCancer/ResNeXtAtten

Info: this is the 2th fold leave for test in the 4-fold cross-validation, with 20.0% of data for independent test.

Infor: In all data of 169 files, label 0 has 51 files,
	  and label 1 has 118 files, where positive response rate = 0.6982248520710059 in full data
Infor: the independent test set has 34 files,and Training including validation Set has 135 files which will be divided into 4 folds.
In the independent test set of 34 files, 0 has 10, 1 has 24, the rate of 1s is 0.7058823529411765
In this test_2 dataset, total 34 files, where 1 has 24 with rate of 0.7058823529411765
In this train_2 dataset, total 102 files, where 1 has 71 with rate of 0.696078431372549
In this validation_2 dataset, total 33 files, where 1 has 23 with rate of 0.696969696969697
=== Network trains from scratch ====
Network has total 1,235,220 parameters.
Info: program will use 2 GPUs.
Loss Functions List: BCEWithLogitsLoss with weight of 1; 

Hints: Optimal_Result = Yes = 1,  Optimal_Result = No = 0 

Epoch	TrLoss	Accura	TPR_r	TNR_r		VaLoss	Accura	TPR_r	TNR_r		TeLoss	Accura	TPR_r	TNR_r
0	0.4733	0.5980	0.6197	0.5484		0.3862	0.6970	1.0000	0.0000		0.3862	0.7059	1.0000	0.0000
5	0.4497	0.6863	0.8873	0.2258		0.4192	0.6970	1.0000	0.0000		0.3829	0.7059	1.0000	0.0000
10	0.3238	0.7353	0.6901	0.8387		1.6248	0.6970	1.0000	0.0000		1.7053	0.7059	0.9583	0.1000
15	0.3718	0.7255	0.7606	0.6452		0.4276	0.6667	0.6522	0.7000		0.4365	0.4118	0.4167	0.4000
20	0.3097	0.8235	0.8732	0.7097		0.9043	0.2727	0.0870	0.7000		0.9288	0.3235	0.1667	0.7000
25	0.2632	0.7941	0.7887	0.8065		1.3868	0.3333	0.1304	0.8000		0.9020	0.4118	0.1667	1.0000
30	0.2750	0.7157	0.6761	0.8065		1.1445	0.6667	0.8261	0.3000		0.7787	0.7059	0.7917	0.5000
35	0.2250	0.8137	0.8028	0.8387		1.3680	0.6061	0.8261	0.1000		0.9202	0.7941	0.9583	0.4000
40	0.1335	0.9216	0.9155	0.9355		1.0525	0.5152	0.5652	0.4000		0.7031	0.5588	0.5833	0.5000
45	0.3679	0.8431	0.8732	0.7742		1.0279	0.3333	0.0870	0.9000		1.0018	0.2941	0.0833	0.8000
50	0.1077	0.8824	0.8310	1.0000		1.1141	0.5455	0.5652	0.5000		0.8326	0.5294	0.5417	0.5000
55	0.0775	0.9706	0.9718	0.9677		0.9874	0.5758	0.5652	0.6000		0.8375	0.5882	0.5833	0.6000
60	0.0750	0.9314	0.9155	0.9677		1.0641	0.6364	0.7391	0.4000		0.9091	0.6471	0.7083	0.5000
65	0.0610	0.9706	0.9718	0.9677		1.2990	0.5455	0.5652	0.5000		0.8227	0.5882	0.6250	0.5000
