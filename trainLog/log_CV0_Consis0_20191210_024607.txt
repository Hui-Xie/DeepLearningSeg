=============training from sratch============
Program ID: 12847

Program command: 
 ['TrainSegV3d_ROI.py', '/home/hxie1/temp_netParameters/OvarianCancer/SegV3d_ROI', '1', '/home/hxie1/data/OvarianCancerCT/primaryROI1_1_3/training/nrrd_npy', '/home/hxie1/data/OvarianCancerCT/primaryROI1_1_3/training/labels_npy', '0', '2', '0']

Major program changes: 
      1  3D V model for primary cancer ROI;
      2  Uniform ROI size: 51*171*171 in z,y,x directon;
      3  Total 36 patient data, in which training data 24 patients, validation 6 patients, and test 6 patients;
      4  all 36 patients data have 50-80% 3D label;
      5  Dice coefficient is 3D dice coefficient against corresponding 3D ground truth;
      6  training data augmentation in the fly: affine in XY plane, translation in Z direction;
      7  In the bottle neck of V model, the latent vector has size of 512*2*9*9;
      Sep 16th, 2019:
      1   add dynamic loss weight according trainin  data;
      2   refine learning rate decay.
      Sep 21st, 2019
      1   add improved Boundary Loss2, and inherit the previous learningrate of network of pure CELoss;
      Sep 23rd, 2019:
      1   improve mean of boundary loss limited on the A,B regions;
      2   use log(segProb) instead of segProb in the boudary loss;
      3   CrossEntropy weight reduces 0.01 per 5 epochs from 1 to 0.01, while boundary Loss weight increase 0.01 per 5 epochs from 0.01 to 1. 
      Sep 24th, 2019
      1   Use boundaryLoss1, which is considering the whole volume. 
      Sep 25th, 2019
      1   use boundaryLoss3, which is a stronger gradient signal to improve loss.
      2   unbalanced weight for class is applied on logP,and just use boundaryLoss3 with CELoss.
      3   use CELoss and boundaryLoss together.
      4   Use truncated DistanceCrossEntropy Loss alone;
      5   change LRScheduler into reduce into Plateau with initial LR=0.1
      Sep 26th, 2019
      1   Add one layer in the bottom of V model;
      2   Add residual connnection in each layer;
      Sep 30th, 2019
      1   With size-reduced ROI of size 51*149*149;
      2   reduce the translation of data augmentation;
      3   reduce all data into 35 patients, excluding a very blur patient.
      Oct 5th, 2019
      1   use uniform physical size 147mm*147mm*147mm, input pixel size: 49*147*147 with spacing size 3mm*1mm*1mm;
      2   change V model with inputsize 49*147*147
      Oct 6th, 2019
      1   add filter number to 48 at the first layer. 
      Oct 7th, 2019
      1   restore to 32 of number of filters in the first layer;
      2   add bottom number of filters to 1024, and keep down sample and add filter number together. 
      Oct 8th, 2019
      1   discard the cancer with size exceeding 147mm*147mm*147mm; Now remains 29 patients data; 
      Oct 9th, 2019
      1   In the first layer of V model, remove the residual link; 
           with the residula link at first layer: Tr dice:54%, Validation Dice 27%, Test Dice 56%;  Not good.
      2   the final output layer, change into 1*1*1 convolution, instead of 3*3*3 convolution;
      3   add labelConsistencyLoss, it use 64 dimension feature extracted from 2 ends of V model:
           It gets stable Training Dice 61%, validation Dice 27%, and test dice 49%, for fold 0 in the fixed physical size:147mm*147mm*147mm; 
      Oct 11th, 2019
      1   use feature tensor just from the output end of V model. It is 32 dimensions.
          It gets stable Training Dice 61%, validation Dice 23%, and test dice 49%, for fold 0 in the fixed physical size:147mm*147mm*147mm; 
      2   windows size for consistency loss changes to 3;
      Oct 12th, 2019
      1   change image window level to 100/50; relaunch training;
      2   change consistencyLoss to use ground truth for comparing diff of feature vector;
      Oct 13th, 2019
      1    use conistencyLoss3: ((G1-G2)-(P1-P2))**2 as loss.
      
      Oct 18th, 2019
      1   use 48 filters at the first layer with inputsize 49*147*147 with scaled ROI.
      
      Oct 20th, 2019
      1   at final output layer of V model, change 1*1*1 conv to 5*5*5 conv, in order to consider context for final output
      
      Oct 23th, 2019
      1   change to MaxPool with 2*2*2 with stride 2;
      2   Loss use GeneralizedDiceLoss function;
      
      Oct 25th, 2019
      1   add trainAllData switch
      
      Oct 29th, 2019
      1   revise reduce learnging rate at training loss;
      2   reduce min_lr = 1e-9
      
      Nov 1st, 2019
      1   erase batchNorm, for training.
      
      Nov 2nd, 2019
      1   Use InstanceNormalization, instead of BatchNorm
      
      Nov 25th, 2019
      1   Add boundary loss into training.  
      
      Dec 3rd, 2019
      1  cancel Boundary Loss;
      2  add 13 network generated files with accuracy >88% into 3D ground truth, then train;
      
      Dec 7th, 2019
      1  Change latent vector in the V model into 1*1 in feature map size.
      
      Dce 9th, 2019
      1  Instance Norm can not apply for one value per channel, which will make the value =0
      
      Dec 10th, 2019
      1   In the uppooling4 and 5, where inputsize=1, use Deconv instead upsample,
          in order to avoid repeat of interpolation.
        
      
       
      

          
         

Discarded changes:                  
          

Program starting Time: 2019-12-10 02:46:07.602783
Info: netPath = /home/hxie1/temp_netParameters/OvarianCancer/SegV3d_ROI/20191210_024607

Info: this is the 0th fold leave for test in the 6-fold cross-validation.

Info: batchSize = 1

Info: useConsistencyLoss = False and searchWindowSize= 0

Net parameters is saved in  /home/hxie1/temp_netParameters/OvarianCancer/SegV3d_ROI/20191210_024607.
All files are in one partition.

all dataset: total 35 image files.
Network has total 258,452,978 parameters.


************** Table of Training Log **************
Epoch	LearningRate		TrainingLoss	Dice		ValidationLoss	Dice		TestLoss	Dice
0	1.0000e-02		0.7471		0.24273
5	1.0000e-02		0.5715		0.37646
10	1.0000e-02		0.5102		0.43926
15	1.0000e-02		0.5005		0.45301
20	1.0000e-02		0.4955		0.47376
25	1.0000e-02		0.4698		0.48073
30	1.0000e-02		0.4677		0.47228
35	1.0000e-02		0.4531		0.49710
40	1.0000e-02		0.4190		0.54859
45	1.0000e-02		0.3856		0.58003
50	1.0000e-02		0.3801		0.58751
55	1.0000e-02		0.4181		0.54796
60	1.0000e-02		0.4008		0.55842
65	1.0000e-02		0.4226		0.54374
70	1.0000e-02		0.3566		0.61911
75	1.0000e-02		0.3573		0.61369
80	1.0000e-02		0.3179		0.65799
85	1.0000e-02		0.3196		0.65379
90	1.0000e-02		0.3441		0.63203
95	1.0000e-02		0.3168		0.66189
100	1.0000e-02		0.2852		0.69391
105	1.0000e-02		0.2807		0.70461
110	1.0000e-02		0.3137		0.67176
115	1.0000e-02		0.3261		0.65367
120	1.0000e-02		0.3085		0.67425
125	1.0000e-02		0.3114		0.66822
130	1.0000e-02		0.2760		0.70541
135	1.0000e-02		0.3026		0.67497
140	1.0000e-02		0.3400		0.63927
145	1.0000e-02		0.2900		0.69300
150	1.0000e-02		0.2375		0.74803
155	1.0000e-02		0.2868		0.69522
160	1.0000e-02		0.2429		0.74359
165	1.0000e-02		0.2586		0.72237
170	1.0000e-02		0.2727		0.71043
175	1.0000e-02		0.2587		0.72558
180	1.0000e-02		0.2661		0.71651
185	1.0000e-02		0.2194		0.76556
190	1.0000e-02		0.2625		0.71098
195	1.0000e-02		0.2474		0.73468
200	1.0000e-02		0.2367		0.74957
205	1.0000e-02		0.2608		0.72326
210	1.0000e-02		0.2203		0.76678
215	1.0000e-02		0.2225		0.76466
220	1.0000e-02		0.2722		0.71484
225	1.0000e-02		0.1909		0.79431
230	1.0000e-02		0.2054		0.78261
235	1.0000e-02		0.2416		0.74336
240	1.0000e-02		0.2134		0.76700
245	1.0000e-02		0.2009		0.78631
250	1.0000e-02		0.2118		0.77449
255	1.0000e-02		0.1844		0.80231
260	1.0000e-02		0.1794		0.80958
265	1.0000e-02		0.2236		0.76037
270	1.0000e-02		0.1915		0.79452
275	1.0000e-02		0.1898		0.79998
280	1.0000e-02		0.2204		0.76486
285	1.0000e-02		0.1718		0.81597
290	1.0000e-02		0.2006		0.78846
295	1.0000e-02		0.1806		0.80913
300	1.0000e-02		0.1860		0.80344
305	1.0000e-02		0.1629		0.82832
310	1.0000e-02		0.1764		0.81392
315	1.0000e-02		0.2116		0.77591
