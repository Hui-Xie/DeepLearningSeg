# Use basic Unet + KLDLoss for OCT multisurface
dataDir: "/home/hxie1/data/OCT_Beijing/numpy/10FoldCVForMultiSurfaceNet/"
K_Folds: 10
fold_k:  0   # k
# training data:  dataDir + training + images_CV{k}.npy
#         label: dataDir + training + surfaces_CV{k}.npy
#         IDs  : dataDir + training + patientID_CV{k}.json

# validation data:  dataDir + validation + images_CV{k}.npy
#           label: dataDir + validation + surfaces_CV{k}.npy
#           IDs  : dataDir + validation + patientID_CV{k}.json

# test data:  dataDir + test + images_CV{k}.npy
#     label: dataDir + test + surfaces_CV{k}.npy
#     IDs  : dataDir + test + patientID_CV{k}.json

numSurfaces: 11  # num of surfaces in an image
sigma: 20.0  # For gaussian  ground truth, in float
device: torch.device('cuda:3')   #GPU ID
batchSize: 6
startFilters: 12  # the num of filters in first layer of Unet

# some physical parameter of images
slicesPerPatient: 31
hPixelSize: 3.870  # unit: micrometer, in y/height direction

network: "OCTUnet"
netPath: "/home/hxie1/data/OCT_Beijing/numpy/10FoldCVForMultiSurfaceNet/netParameters"  # net is saved at netpath / network / self_filename
