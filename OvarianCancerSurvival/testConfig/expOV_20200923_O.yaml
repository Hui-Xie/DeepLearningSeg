# Ovarian Cancer Survival Prediction.
# simultaneously predict ResidualSize, ChemoResponse, Age, and Survival time
# with all are 0.25 weight.

debug: True

# train config
device: torch.device('cuda:3')   #GPU ID
batchSize: 4  # fixed batchsize
sampleSlicesPerPatient: 16 # sample slice number for each patient
learningRate: 0.01

#data source
existGTLabel: True
dataDir:  "/home/hxie1/data/OvarianCancerCT/rawNrrd/images_H281_W281"

trainingDataPath: "/home/hxie1/data/OvarianCancerCT/survivalPredict/8ColsGT/trainingSetMRN.txt"
validationDataPath: "/home/hxie1/data/OvarianCancerCT/survivalPredict/8ColsGT/validationSetMRN.txt"
testDataPath: "/home/hxie1/data/OvarianCancerCT/survivalPredict/8ColsGT/testSetMRN.txt"

trainingGTPath: "/home/hxie1/data/OvarianCancerCT/survivalPredict/8ColsGT/trainingSetGroundTruth.csv"
validationGTPath: "/home/hxie1/data/OvarianCancerCT/survivalPredict/8ColsGT/validationSetGroundTruth.csv"
testGTPath: "/home/hxie1/data/OvarianCancerCT/survivalPredict/8ColsGT/testSetGroundTruth.csv"
colsGT: 8

# Network config
network: "ResponseNet"
imageH: 281
imageW: 281
inputChannels: 16 # rawImage + gradChannels(W,H)
gradChannels: 0   # the added gradient channels beside raw image channel
bothSideGrad: True # False use singleSideGrad
outputChannelsMobileNet: 160
widthResidualHead: 4
residudalClassPercent: [0.1858, 0.5311, 0.0442, 0.2389]  # proportion of calss
widthChemoHead: 1
chemoClassPercent: [0.266,0.734]
widthAgeHead: 100
widthSurvivalHead: 100
widthOptimalResultHead: 1
optimalClassPercent: [0.3125, 0.6875]  # 0,1 proportion
lossWeights: [1.0, 1.0, 1.0, 1.0, 1.0]  # for ResidualTumorSize, ChemoResponse, Age, SurvivalTime in order
predictHeads: [False, False, False, False, True] # for ResidualTumorSize, ChemoResponse, Age, SurvivalTime in order, OptimalResult


# data augmentation
augmentProb: 0.8  #  data augmentation rate
flipProb: 0.5
randomCropArea: 0.75 # 0.75
# randomSlicesRate: 0.8 #0.75
gaussianNoiseStd: 0.1 # gausssian nosie std with mean =0
# for salt pepper noise
saltPepperRate: 0.05  # rate = (salt+pepper)/allPixels
saltRate: 0.5  # saltRate = salt/(salt+pepper)

# save network
netPath: "/home/hxie1/data/OvarianCancerCT/survivalPredict/netParameters"  # net is saved at netpath / network / self_filename
loadNetPath: "/home/hxie1/data/OvarianCancerCT/survivalPredict/netParameters/ResponseNet/expOV_20200923_O"
outputDir: ""
logDir: "/home/hxie1/data/OvarianCancerCT/survivalPredict/log"  # net is saved at logPath / network / self_filename

# module config:
